
from django.urls import reverse
from django.core.cache import cache
from ckeditor_uploader.fields import RichTextUploadingField
from django.utils.translation import gettext as _
from django.core.mail import send_mail
from django.conf import settings
from django.db import models
from django.contrib.auth import get_user_model
class Author(models.Model):
    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    rating = models.IntegerField(default=0)

    def __str__(self):
        return self.user.username


class Category(models.Model):
    name = models.CharField(max_length=100, unique=True, help_text=_('category name'))

    def __str__(self):
        return self.name


class Post(models.Model):

    tanks = 'TS'
    healers = 'HE'
    dd = 'DD'
    merchants = 'ME'
    guild_masters = 'GM'
    quest_givers = 'QG'
    blacksmiths = 'BL'
    tanners = 'TA'
    zelvars = 'ZE'
    spellmasters = 'SM'

    POST_TYPES = [
        (tanks, '–¢–∞–Ω–∫–∏'),
        (healers, '–•–∏–ª—ã'),
        (dd, '–î–î'),
        (merchants, '–¢–æ—Ä–≥–æ–≤—Ü—ã'),
        (guild_masters, '–ì–∏–ª–¥–º–∞—Å—Ç–µ—Ä—ã'),
        (quest_givers, '–ö–≤–µ—Å—Ç–≥–∏–≤–µ—Ä—ã'),
        (blacksmiths, '–ö—É–∑–Ω–µ—Ü—ã'),
        (tanners, '–ö–æ–∂–µ–≤–Ω–∏–∫–∏'),
        (zelvars, '–ó–µ–ª—å–µ–≤–∞—Ä—ã'),
        (spellmasters, '–ú–∞—Å—Ç–µ—Ä–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π'),
    ]


    author = models.ForeignKey(Author, on_delete=models.CASCADE, related_name='posts')
    post_type = models.CharField(max_length=2, choices=POST_TYPES)
    post_time = models.DateTimeField(auto_now_add=True)
    category = models.ManyToManyField(Category, through='PostCategory')
    title = models.CharField(max_length=255)
    text = RichTextUploadingField()

    def preview(self):
        if len(self.text) > 124:
            return self.text[0:124] + '...'
        else:
            return self.text 

    def get_absolute_url(self):
        return reverse('post_detail', kwargs={'pk': self.pk})

    def __str__(self):
        return f'{self.title.title()}:{self.preview()}'

    def save(self, *args, **kwargs):
        super().save(*args, **kwargs)  # —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ–±—ä–µ–∫—Ç —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
        cache.delete(f'news-{self.pk}')  # –∑–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ –∫—ç—à–∞, —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –µ–≥–æ


class PostCategory(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE)
    category = models.ForeignKey(Category, on_delete=models.CASCADE)

    def __str__(self):
        return self.category.name




class Response(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name='responses')  # –°–≤—è–∑—å —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º
    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE,
                             related_name='user_responses')  # –°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º –æ—Ç–∫–ª–∏–∫–∞
    text = models.TextField()  # –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–∫–ª–∏–∫–∞
    text = models.TextField()  # –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
    created_at = models.DateTimeField(auto_now_add=True)  # –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    accepted = models.BooleanField(default=False)  # –ü—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–∫–ª–∏–∫–∞

    def accept(self):
        """–ü—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–∫–ª–∏–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        self.accepted = True
        self.save()

        # üì© –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –æ—Å—Ç–∞–≤–∏–≤—à–µ–º—É –æ—Ç–∫–ª–∏–∫
        send_mail(
            '–í–∞—à –æ—Ç–∫–ª–∏–∫ –ø—Ä–∏–Ω—è—Ç!',
            f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {self.user.username}!\n\n'
            f'–í–∞—à –æ—Ç–∫–ª–∏–∫ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ "{self.post.title}" –±—ã–ª –ø—Ä–∏–Ω—è—Ç –∞–≤—Ç–æ—Ä–æ–º.\n\n'
            f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
            'Shapch1c@yandex.ru',  # –ü–æ—á—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            [self.user.email],  # –ü–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å—Ç–∞–≤–∏–≤—à–µ–≥–æ –æ—Ç–∫–ª–∏–∫
            fail_silently=False,
        )

    def __str__(self):
        return f'–û—Ç–∫–ª–∏–∫ –æ—Ç {self.user.username} –Ω–∞ {self.post.title}'



User = get_user_model()

class OneTimeCode(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    code = models.CharField(max_length=6)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.user.email} - {self.code}"





class EmailList(models.Model):
    email = models.EmailField(unique=True)

    def __str__(self):
        return self.email


class Subscriber(models.Model):
    email = models.EmailField(unique=True)

    def __str__(self):
        return self.email